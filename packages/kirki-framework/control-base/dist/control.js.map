{"mappings":"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","sources":["src/dynamic-control.js"],"sourcesContent":["/**\n * The majority of the code in this file\n * is derived from the wp-customize-posts plugin\n * and the work of @westonruter to whom I am very grateful.\n *\n * @see https://github.com/xwp/wp-customize-posts\n */\n\n(function () {\n\t'use strict';\n\n\t/**\n\t * A dynamic color-alpha control.\n\t *\n\t * @class\n\t * @augments wp.customize.Control\n\t * @augments wp.customize.Class\n\t */\n\twp.customize.kirkiDynamicControl = wp.customize.Control.extend({\n\n\t\tinitialize: function (id, options) {\n\t\t\tvar control = this,\n\t\t\t\targs = options || {};\n\n\t\t\targs.params = args.params || {};\n\t\t\tif (!args.params.type) {\n\t\t\t\targs.params.type = 'kirki-generic';\n\t\t\t}\n\n\t\t\tlet className;\n\n\t\t\tif (args.content) {\n\t\t\t\tlet splits = args.content.split('class=\"');\n\t\t\t\tsplits = splits[1].split('\"');\n\t\t\t\tclassName = splits[0];\n\t\t\t} else {\n\t\t\t\tclassName = 'customize-control customize-control-' + args.params.type;\n\t\t\t}\n\n\t\t\tif (!args.params.wrapper_attrs && args.params.wrapper_atts) {\n\t\t\t\targs.params.wrapper_attrs = args.params.wrapper_atts;\n\t\t\t}\n\n\t\t\t// Hijack the container to add wrapper_attrs.\n      args.params.content = jQuery(\"<li></li>\");\n\t\t\targs.params.content.attr('id', 'customize-control-' + id.replace(/]/g, '').replace(/\\[/g, '-'));\n\t\t\targs.params.content.attr('class', className);\n\n\t\t\t_.each(args.params.wrapper_attrs, function (val, key) {\n\t\t\t\tif ('class' === key) {\n\t\t\t\t\tval = val.replace('{default_class}', className);\n\t\t\t\t}\n\n\t\t\t\targs.params.content.attr(key, val);\n\t\t\t});\n\n\t\t\tcontrol.propertyElements = [];\n\t\t\twp.customize.Control.prototype.initialize.call(control, id, args);\n\t\t\twp.hooks.doAction('kirki.dynamicControl.init.after', id, control, args);\n\t\t},\n\n\t\t/**\n\t\t * Add bidirectional data binding links between inputs and the setting(s).\n\t\t *\n\t\t * This is copied from wp.customize.Control.prototype.initialize(). It\n\t\t * should be changed in Core to be applied once the control is embedded.\n\t\t *\n\t\t * @private\n\t\t * @returns {void}\n\t\t */\n\t\t_setUpSettingRootLinks: function () {\n\t\t\tvar control = this,\n\t\t\t\tnodes = control.container.find('[data-customize-setting-link]');\n\n\t\t\tnodes.each(function () {\n\t\t\t\tvar node = jQuery(this);\n\n\t\t\t\twp.customize(node.data('customizeSettingLink'), function (setting) {\n\t\t\t\t\tvar element = new wp.customize.Element(node);\n\t\t\t\t\tcontrol.elements.push(element);\n\t\t\t\t\telement.sync(setting);\n\t\t\t\t\telement.set(setting());\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Add bidirectional data binding links between inputs and the setting properties.\n\t\t *\n\t\t * @private\n\t\t * @returns {void}\n\t\t */\n\t\t_setUpSettingPropertyLinks: function () {\n\t\t\tvar control = this,\n\t\t\t\tnodes;\n\n\t\t\tif (!control.setting) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnodes = control.container.find('[data-customize-setting-property-link]');\n\n\t\t\tnodes.each(function () {\n\t\t\t\tvar node = jQuery(this),\n\t\t\t\t\telement,\n\t\t\t\t\tpropertyName = node.data('customizeSettingPropertyLink');\n\n\t\t\t\telement = new wp.customize.Element(node);\n\t\t\t\tcontrol.propertyElements.push(element);\n\t\t\t\telement.set(control.setting()[propertyName]);\n\n\t\t\t\telement.bind(function (newPropertyValue) {\n\t\t\t\t\tvar newSetting = control.setting();\n\t\t\t\t\tif (newPropertyValue === newSetting[propertyName]) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tnewSetting = _.clone(newSetting);\n\t\t\t\t\tnewSetting[propertyName] = newPropertyValue;\n\t\t\t\t\tcontrol.setting.set(newSetting);\n\t\t\t\t});\n\t\t\t\tcontrol.setting.bind(function (newValue) {\n\t\t\t\t\tif (newValue[propertyName] !== element.get()) {\n\t\t\t\t\t\telement.set(newValue[propertyName]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @inheritdoc\n\t\t */\n\t\tready: function () {\n\t\t\tvar control = this;\n\n\t\t\tcontrol._setUpSettingRootLinks();\n\t\t\tcontrol._setUpSettingPropertyLinks();\n\n\t\t\twp.customize.Control.prototype.ready.call(control);\n\n\t\t\tcontrol.deferred.embedded.done(function () {\n\t\t\t\tcontrol.initKirkiControl();\n\t\t\t\twp.hooks.doAction('kirki.dynamicControl.ready.deferred.embedded.done', control);\n\t\t\t});\n\t\t\twp.hooks.doAction('kirki.dynamicControl.ready.after', control);\n\t\t},\n\n\t\t/**\n\t\t * Embed the control in the document.\n\t\t *\n\t\t * Override the embed() method to do nothing,\n\t\t * so that the control isn't embedded on load,\n\t\t * unless the containing section is already expanded.\n\t\t *\n\t\t * @returns {void}\n\t\t */\n\t\tembed: function () {\n\t\t\tvar control = this,\n\t\t\t\tsectionId = control.section();\n\n\t\t\tif (!sectionId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twp.customize.section(sectionId, function (section) {\n\t\t\t\tif ('kirki-expanded' === section.params.type || section.expanded() || wp.customize.settings.autofocus.control === control.id) {\n\t\t\t\t\tcontrol.actuallyEmbed();\n\t\t\t\t} else {\n\t\t\t\t\tsection.expanded.bind(function (expanded) {\n\t\t\t\t\t\tif (expanded) {\n\t\t\t\t\t\t\tcontrol.actuallyEmbed();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\twp.hooks.doAction('kirki.dynamicControl.embed.after', control);\n\t\t},\n\n\t\t/**\n\t\t * Deferred embedding of control when actually\n\t\t *\n\t\t * This function is called in Section.onChangeExpanded() so the control\n\t\t * will only get embedded when the Section is first expanded.\n\t\t *\n\t\t * @returns {void}\n\t\t */\n\t\tactuallyEmbed: function () {\n\t\t\tvar control = this;\n\t\t\tif ('resolved' === control.deferred.embedded.state()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontrol.renderContent();\n\t\t\tcontrol.deferred.embedded.resolve(); // This triggers control.ready().\n\t\t\twp.hooks.doAction('kirki.dynamicControl.actuallyEmbed.after', control);\n\t\t},\n\n\t\t/**\n\t\t * This is not working with autofocus.\n\t\t *\n\t\t * @param {object} [args] Args.\n\t\t * @returns {void}\n\t\t */\n\t\tfocus: function (args) {\n\t\t\tvar control = this;\n\t\t\tcontrol.actuallyEmbed();\n\t\t\twp.customize.Control.prototype.focus.call(control, args);\n\t\t\twp.hooks.doAction('kirki.dynamicControl.focus.after', control);\n\t\t},\n\n\t\t/**\n\t\t * Additional actions that run on ready.\n\t\t *\n\t\t * @param {object} control - The control object. If undefined fallsback to the this.\n\t\t * @returns {void}\n\t\t */\n\t\tinitKirkiControl: function (control) {\n\t\t\tcontrol = control || this;\n\t\t\twp.hooks.doAction('kirki.dynamicControl.initKirkiControl', this);\n\n\t\t\t// Save the value\n\t\t\tcontrol.container.on('change keyup paste click', 'input', function () {\n\t\t\t\tcontrol.setting.set(jQuery(this).val());\n\t\t\t});\n\t\t}\n\t});\n}());\n\n(function (api) {\n\n\t/**\n\t * Set the value and trigger all bound callbacks.\n\t *\n\t * @since 1.0\n\t * @param {object} to - New value.\n\t * @returns {Object} - this\n\t */\n\tapi.Value.prototype.set = function (to) {\n\t\tvar from = this._value,\n\t\t\tparentSetting,\n\t\t\tnewVal;\n\n\t\tto = this._setter.apply(this, arguments);\n\t\tto = this.validate(to);\n\n\t\t// Bail if the sanitized value is null or unchanged.\n\t\tif (null === to || _.isEqual(from, to)) {\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n\t\t * Start Kirki mod.\n\t\t */\n\t\tif (this.id && api.control(this.id) && api.control(this.id).params && api.control(this.id).params.parent_setting) {\n\t\t\tparentSetting = api.control(this.id).params.parent_setting;\n\t\t\tnewVal = {};\n\t\t\tnewVal[this.id.replace(parentSetting + '[', '').replace(']', '')] = to;\n\t\t\tapi.control(parentSetting).setting.set(jQuery.extend({}, api.control(parentSetting).setting._value, newVal));\n\t\t}\n\n\t\t/**\n\t\t * End Kirki mod.\n\t\t */\n\n\t\tthis._value = to;\n\t\tthis._dirty = true;\n\n\t\tthis.callbacks.fireWith(this, [to, from]);\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the value.\n\t *\n\t * @returns {mixed} - Returns the value.\n\t */\n\tapi.Value.prototype.get = function () {\n\n\t\t// Start Kirki mod.\n\t\tvar parentSetting;\n\t\tif (this.id && api.control(this.id) && api.control(this.id).params && api.control(this.id).params.parent_setting) {\n\t\t\tparentSetting = api.control(this.id).params.parent_setting;\n\t\t\treturn api.control(parentSetting).setting.get()[this.id.replace(parentSetting + '[', '').replace(']', '')];\n\t\t}\n\t\t// End Kirki mod.\n\n\t\treturn this._value;\n\t};\n}(wp.customize));\n"],"names":["api","wp","customize","kirkiDynamicControl","Control","extend","initialize","id","options","className","control","this","args","params","type","content","splits","split","wrapper_attrs","wrapper_atts","jQuery","attr","replace","_","each","val","key","propertyElements","prototype","call","hooks","doAction","_setUpSettingRootLinks","container","find","node","data","setting","element","Element","elements","push","sync","set","_setUpSettingPropertyLinks","propertyName","bind","newPropertyValue","newSetting","clone","newValue","get","ready","deferred","embedded","done","initKirkiControl","embed","sectionId","section","expanded","settings","autofocus","actuallyEmbed","state","renderContent","resolve","focus","on","Value","to","parentSetting","newVal","from","_value","_setter","apply","arguments","validate","isEqual","parent_setting","_dirty","callbacks","fireWith"],"version":3,"file":"control.js.map"}