{"version":3,"file":"control.js","mappings":"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","sources":["webpack://control-range-slider/external var \"React\"","webpack://control-range-slider/./src/KirkiSliderForm.js","webpack://control-range-slider/./src/KirkiSliderControl.js","webpack://control-range-slider/./src/control.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","import { useRef } from \"react\";\n\nconst KirkiSliderForm = (props) => {\n\n\tconst { control, customizerSetting, choices } = props;\n\n\tlet trigger = '';\n\n\tcontrol.updateComponentState = (val) => {\n\t\tif ('slider' === trigger) {\n\t\t\tinputRef.current.value = val;\n\t\t} else if ('input' === trigger) {\n\t\t\tsliderRef.current.value = val;\n\t\t}\n\t};\n\n\tconst handleChange = (e) => {\n\t\ttrigger = 'range' === e.target.type ? 'slider' : 'input';\n\t\tcustomizerSetting.set(e.target.value);\n\t};\n\n\tconst handleReset = (e) => {\n\t\tif ('' !== props.value) {\n\t\t\tsliderRef.current.value = props.value;\n\t\t\tinputRef.current.value = props.value;\n\t\t} else {\n\t\t\tsliderRef.current.value = 0;\n\t\t\tinputRef.current.value = '';\n\t\t}\n\t};\n\n\t// Preparing for the template.\n\tconst fieldId = `kirki-control-input-${customizerSetting.id}`;\n\tconst value = '' !== props.value ? props.value : 0;\n\tconst inputRef = useRef(null);\n\tconst sliderRef = useRef(null);\n\n\treturn (\n\t\t<div className=\"kirki-control-form\" tabIndex=\"1\">\n\t\t\t<label className=\"kirki-control-label\" htmlFor={fieldId}>\n\t\t\t\t<span className=\"customize-control-title\">{props.label}</span>\n\t\t\t\t<span className=\"customize-control-description description\">{props.description}</span>\n\t\t\t</label>\n\n\t\t\t<div className=\"customize-control-notifications-container\" ref={props.setNotificationContainer}></div>\n\n\t\t\t<button type=\"button\" className=\"kirki-control-reset\" onClick={handleReset}>\n\t\t\t\t<i className=\"dashicons dashicons-image-rotate\"></i>\n\t\t\t</button>\n\n\t\t\t<div className=\"kirki-control-cols\">\n\t\t\t\t<div className=\"kirki-control-left-col\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={sliderRef}\n\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\tid={fieldId}\n\t\t\t\t\t\tdefaultValue={value}\n\t\t\t\t\t\tmin={choices.min}\n\t\t\t\t\t\tmax={choices.max}\n\t\t\t\t\t\tstep={choices.step}\n\t\t\t\t\t\tclassName=\"kirki-control-slider\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"kirki-control-right-col\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tdefaultValue={'' !== props.value ? value : ''}\n\t\t\t\t\t\tmin={choices.min}\n\t\t\t\t\t\tmax={choices.max}\n\t\t\t\t\t\tstep={choices.step}\n\t\t\t\t\t\tclassName=\"kirki-control-input\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n};\n\nexport default KirkiSliderForm;\n","import KirkiSliderForm from './KirkiSliderForm';\n\n/**\n * KirkiSliderControl.\n *\n * Global objects brought:\n * - wp\n * - jQuery\n * - React\n * - ReactDOM\n *\n * @class\n * @augments wp.customize.Control\n * @augments wp.customize.Class\n */\nconst KirkiSliderControl = wp.customize.Control.extend({\n\n\t/**\n\t * Initialize.\n\t *\n\t * @param {string} id - Control ID.\n\t * @param {object} params - Control params.\n\t */\n\tinitialize: function (id, params) {\n\t\tconst control = this;\n\n\t\t// Bind functions to this control context for passing as React props.\n\t\tcontrol.setNotificationContainer = control.setNotificationContainer.bind(control);\n\n\t\twp.customize.Control.prototype.initialize.call(control, id, params);\n\n\t\t// The following should be eliminated with <https://core.trac.wordpress.org/ticket/31334>.\n\t\tfunction onRemoved(removedControl) {\n\t\t\tif (control === removedControl) {\n\t\t\t\tcontrol.destroy();\n\t\t\t\tcontrol.container.remove();\n\t\t\t\twp.customize.control.unbind('removed', onRemoved);\n\t\t\t}\n\t\t}\n\t\twp.customize.control.bind('removed', onRemoved);\n\t},\n\n\t/**\n\t * Set notification container and render.\n\t *\n\t * This is called when the React component is mounted.\n\t *\n\t * @param {Element} element - Notification container.\n\t * @returns {void}\n\t */\n\tsetNotificationContainer: function setNotificationContainer(element) {\n\t\tconst control = this;\n\n\t\tcontrol.notifications.container = jQuery(element);\n\t\tcontrol.notifications.render();\n\t},\n\n\t/**\n\t * Render the control into the DOM.\n\t *\n\t * This is called from the Control#embed() method in the parent class.\n\t *\n\t * @returns {void}\n\t */\n\trenderContent: function renderContent() {\n\t\tconst control = this;\n\n\t\tReactDOM.render(\n\t\t\t<KirkiSliderForm\n\t\t\t\t{...control.params}\n\t\t\t\tcontrol={control}\n\t\t\t\tcustomizerSetting={control.setting}\n\t\t\t\tsetNotificationContainer={control.setNotificationCotainer}\n\t\t\t\tvalue={control.params.value}\n\t\t\t/>,\n\t\t\tcontrol.container[0]\n\t\t);\n\n\t\tif (false !== control.params.choices.allowCollapse) {\n\t\t\tcontrol.container.addClass('allowCollapse');\n\t\t}\n\t},\n\n\t/**\n\t * After control has been first rendered, start re-rendering when setting changes.\n\t *\n\t * React is able to be used here instead of the wp.customize.Element abstraction.\n\t *\n\t * @returns {void}\n\t */\n\tready: function ready() {\n\t\tconst control = this;\n\n\t\t/**\n\t\t * Update component value's state when customizer setting's value is changed.\n\t\t */\n\t\tcontrol.setting.bind((val) => {\n\t\t\tcontrol.updateComponentState(val);\n\t\t});\n\t},\n\n\t/**\n\t * This method will be overriden by the rendered component.\n\t */\n\tupdateComponentState: (val) => { },\n\n\t/**\n\t * Handle removal/de-registration of the control.\n\t *\n\t * This is essentially the inverse of the Control#embed() method.\n\t *\n\t * @link https://core.trac.wordpress.org/ticket/31334\n\t * @returns {void}\n\t */\n\tdestroy: function destroy() {\n\t\tconst control = this;\n\n\t\t// Garbage collection: undo mounting that was done in the embed/renderContent method.\n\t\tReactDOM.unmountComponentAtNode(control.container[0]);\n\n\t\t// Call destroy method in parent if it exists (as of #31334).\n\t\tif (wp.customize.Control.prototype.destroy) {\n\t\t\twp.customize.Control.prototype.destroy.call(control);\n\t\t}\n\t}\n});\n\nexport default KirkiSliderControl;\n","import \"./control.scss\";\nimport KirkiSliderControl from './KirkiSliderControl';\n\n\n// Register control type with Customizer.\nwp.customize.controlConstructor['kirki-slider'] = KirkiSliderControl;\n"],"names":["React","props","control","customizerSetting","choices","trigger","updateComponentState","val","inputRef","current","value","sliderRef","handleChange","e","target","type","set","fieldId","id","useRef","className","tabIndex","htmlFor","label","description","ref","setNotificationContainer","onClick","defaultValue","min","max","step","onChange","wp","customize","Control","extend","initialize","params","this","bind","prototype","call","onRemoved","removedControl","destroy","container","remove","unbind","element","notifications","jQuery","render","renderContent","ReactDOM","setting","setNotificationCotainer","allowCollapse","addClass","ready","unmountComponentAtNode","controlConstructor","KirkiSliderControl"],"sourceRoot":""}