{"version":3,"file":"control.js","mappings":"mBAAA,MAAM,EAA+BA,M,0GC2DrC,QAzD8B,SAACC,GAE9B,I,IAAQC,EAAwCD,EAAxCC,QAASC,EAA+BF,EAA/BE,kBAAmBC,EAAYH,EAAZG,QAEpC,G,GAAwCC,EAAAA,EAAAA,UAASJ,EAAMK,O,EAAvD,E,8zBAAOC,EAAP,KAAqBC,EAArB,KAEAN,EAAQO,qBAAuB,SAACC,GAC/BF,EAAgBE,IAGjB,IAAMC,EAAe,SAACC,GACrBT,EAAkBU,IAAID,EAAEE,OAAOC,QAOhC,OACC,2BAAKC,UAAU,qBAAqBC,SAAS,KAC5C,6BAAOD,UAAU,sBAAsBE,QAASC,SAC/C,4BAAMH,UAAU,2BAA2Bf,EAAMmB,OACjD,4BAAMJ,UAAU,6CAA6Cf,EAAMoB,cAGpE,2BAAKL,UAAU,4CAA4CM,IAAKrB,EAAMsB,2BAEtE,8BAAQC,KAAK,SAASR,UAAU,sBAAsBS,QAbpC,WACnBjB,EAAgBP,EAAMK,SAapB,yBAAGU,UAAU,sCAGd,0BAAIA,UAAW,sBAAwBZ,EAAQsB,MAAQ,WACrDtB,EAAQuB,OAAOC,KAAI,SAACC,GACpB,IAAMC,EAAgBD,IAAUtB,EAAe,0BAA4B,cAE3E,OACC,0BAAIS,UAAWc,GACd,2BACCf,MAAOc,EACPE,MACC,CACCC,MAAO5B,EAAQ6B,KAAO,KACtBC,OAAQ9B,EAAQ6B,KAAO,KACvBE,gBAAiBN,GAGnBJ,QAASd,W,+MC+EjB,QAhHiCyB,GAAGC,UAAUC,QAAQC,OAAO,CAQ5DC,WAAY,SAAUC,EAAIC,GACzB,IAAMxC,EAAUyC,KAGhBzC,EAAQqB,yBAA2BrB,EAAQqB,yBAAyBqB,KAAK1C,GAEzEkC,GAAGC,UAAUC,QAAQO,UAAUL,WAAWM,KAAK5C,EAASuC,EAAIC,GAU5DN,GAAGC,UAAUnC,QAAQ0C,KAAK,WAP1B,SAASG,EAAUC,GACd9C,IAAY8C,IACf9C,EAAQ+C,UACR/C,EAAQgD,UAAUC,SAClBf,GAAGC,UAAUnC,QAAQkD,OAAO,UAAWL,QAc1CxB,yBAA0B,SAAkC8B,GAC3CV,KAERW,cAAcJ,UAAYK,OAAOF,GAFzBV,KAGRW,cAAcE,UAUvBC,cAAe,WACd,IAAMvD,EAAUyC,KAEhBe,SAASF,OACR,oBAAC,EAAD,KACKtD,EAAQwC,OADb,CAECxC,QAASA,EACTC,kBAAmBD,EAAQyD,QAC3BpC,yBAA0BrB,EAAQ0D,wBAClCtD,MAAOJ,EAAQwC,OAAOpC,SAEvBJ,EAAQgD,UAAU,KAGf,IAAUhD,EAAQwC,OAAOtC,QAAQyD,eACpC3D,EAAQgD,UAAUY,SAAS,kBAW7BC,MAAO,WACN,IAAM7D,EAAUyC,KAKhBzC,EAAQyD,QAAQf,MAAK,SAAClC,GACrBR,EAAQO,qBAAqBC,OAO/BD,qBAAsB,SAACC,KAUvBuC,QAAS,WAIRS,SAASM,uBAHOrB,KAGwBO,UAAU,IAG9Cd,GAAGC,UAAUC,QAAQO,UAAUI,SAClCb,GAAGC,UAAUC,QAAQO,UAAUI,QAAQH,KAPxBH,SC9GlBP,GAAGC,UAAU4B,mBAAmB,uBAAyBC,G","sources":["webpack://control-color-palette/external var \"React\"","webpack://control-color-palette/./src/KirkiColorPaletteForm.js","webpack://control-color-palette/./src/KirkiColorPaletteControl.js","webpack://control-color-palette/./src/control.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","import { useState } from \"react\";\n\nconst KirkiColorPaletteForm = (props) => {\n\n\tconst { control, customizerSetting, choices } = props;\n\n\tconst [selectedItem, setSelectedItem] = useState(props.value);\n\n\tcontrol.updateComponentState = (val) => {\n\t\tsetSelectedItem(val);\n\t};\n\n\tconst handleSelect = (e) => {\n\t\tcustomizerSetting.set(e.target.title);\n\t};\n\n\tconst handleReset = () => {\n\t\tsetSelectedItem(props.value);\n\t};\n\n\treturn (\n\t\t<div className=\"kirki-control-form\" tabIndex=\"1\">\n\t\t\t<label className=\"kirki-control-label\" htmlFor={fieldId}>\n\t\t\t\t<span className=\"customize-control-title\">{props.label}</span>\n\t\t\t\t<span className=\"customize-control-description description\">{props.description}</span>\n\t\t\t</label>\n\n\t\t\t<div className=\"customize-control-notifications-container\" ref={props.setNotificationContainer}></div>\n\n\t\t\t<button type=\"button\" className=\"kirki-control-reset\" onClick={handleReset}>\n\t\t\t\t<i className=\"dashicons dashicons-image-rotate\"></i>\n\t\t\t</button>\n\n\t\t\t<ul className={\"kirki-colors kirki-\" + choices.shape + \"-colors\"}>\n\t\t\t\t{choices.colors.map((color) => {\n\t\t\t\t\tconst itemClassName = color === selectedItem ? \"kirki-color is-selected\" : \"kirki-color\";\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li className={itemClassName}>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\ttitle={color}\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\twidth: choices.size + 'px',\n\t\t\t\t\t\t\t\t\t\theight: choices.size + 'px',\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: color\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={handleSelect}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n\n};\n\nexport default KirkiColorPaletteForm;\n","import KirkiColorPaletteForm from './KirkiColorPaletteForm';\r\n\r\n/**\r\n * KirkiColorPaletteControl.\r\n *\r\n * Global objects brought:\r\n * - wp\r\n * - jQuery\r\n * - React\r\n * - ReactDOM\r\n *\r\n * @class\r\n * @augments wp.customize.Control\r\n * @augments wp.customize.Class\r\n */\r\nconst KirkiColorPaletteControl = wp.customize.Control.extend({\r\n\r\n\t/**\r\n\t * Initialize.\r\n\t *\r\n\t * @param {string} id - Control ID.\r\n\t * @param {object} params - Control params.\r\n\t */\r\n\tinitialize: function (id, params) {\r\n\t\tconst control = this;\r\n\r\n\t\t// Bind functions to this control context for passing as React props.\r\n\t\tcontrol.setNotificationContainer = control.setNotificationContainer.bind(control);\r\n\r\n\t\twp.customize.Control.prototype.initialize.call(control, id, params);\r\n\r\n\t\t// The following should be eliminated with <https://core.trac.wordpress.org/ticket/31334>.\r\n\t\tfunction onRemoved(removedControl) {\r\n\t\t\tif (control === removedControl) {\r\n\t\t\t\tcontrol.destroy();\r\n\t\t\t\tcontrol.container.remove();\r\n\t\t\t\twp.customize.control.unbind('removed', onRemoved);\r\n\t\t\t}\r\n\t\t}\r\n\t\twp.customize.control.bind('removed', onRemoved);\r\n\t},\r\n\r\n\t/**\r\n\t * Set notification container and render.\r\n\t *\r\n\t * This is called when the React component is mounted.\r\n\t *\r\n\t * @param {Element} element - Notification container.\r\n\t * @returns {void}\r\n\t */\r\n\tsetNotificationContainer: function setNotificationContainer(element) {\r\n\t\tconst control = this;\r\n\r\n\t\tcontrol.notifications.container = jQuery(element);\r\n\t\tcontrol.notifications.render();\r\n\t},\r\n\r\n\t/**\r\n\t * Render the control into the DOM.\r\n\t *\r\n\t * This is called from the Control#embed() method in the parent class.\r\n\t *\r\n\t * @returns {void}\r\n\t */\r\n\trenderContent: function renderContent() {\r\n\t\tconst control = this;\r\n\r\n\t\tReactDOM.render(\r\n\t\t\t<KirkiColorPaletteForm\r\n\t\t\t\t{...control.params}\r\n\t\t\t\tcontrol={control}\r\n\t\t\t\tcustomizerSetting={control.setting}\r\n\t\t\t\tsetNotificationContainer={control.setNotificationCotainer}\r\n\t\t\t\tvalue={control.params.value}\r\n\t\t\t/>,\r\n\t\t\tcontrol.container[0]\r\n\t\t);\r\n\r\n\t\tif (false !== control.params.choices.allowCollapse) {\r\n\t\t\tcontrol.container.addClass('allowCollapse');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * After control has been first rendered, start re-rendering when setting changes.\r\n\t *\r\n\t * React is able to be used here instead of the wp.customize.Element abstraction.\r\n\t *\r\n\t * @returns {void}\r\n\t */\r\n\tready: function ready() {\r\n\t\tconst control = this;\r\n\r\n\t\t/**\r\n\t\t * Update component value's state when customizer setting's value is changed.\r\n\t\t */\r\n\t\tcontrol.setting.bind((val) => {\r\n\t\t\tcontrol.updateComponentState(val);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * This method will be overriden by the rendered component.\r\n\t */\r\n\tupdateComponentState: (val) => { },\r\n\r\n\t/**\r\n\t * Handle removal/de-registration of the control.\r\n\t *\r\n\t * This is essentially the inverse of the Control#embed() method.\r\n\t *\r\n\t * @link https://core.trac.wordpress.org/ticket/31334\r\n\t * @returns {void}\r\n\t */\r\n\tdestroy: function destroy() {\r\n\t\tconst control = this;\r\n\r\n\t\t// Garbage collection: undo mounting that was done in the embed/renderContent method.\r\n\t\tReactDOM.unmountComponentAtNode(control.container[0]);\r\n\r\n\t\t// Call destroy method in parent if it exists (as of #31334).\r\n\t\tif (wp.customize.Control.prototype.destroy) {\r\n\t\t\twp.customize.Control.prototype.destroy.call(control);\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport default KirkiColorPaletteControl;\r\n","import \"./control.scss\";\r\nimport KirkiColorPaletteControl from './KirkiColorPaletteControl';\r\n\r\n\r\n// Register control type with Customizer.\r\nwp.customize.controlConstructor['kirki-color-palette'] = KirkiColorPaletteControl;\r\n"],"names":["React","props","control","customizerSetting","choices","useState","value","selectedItem","setSelectedItem","updateComponentState","val","handleSelect","e","set","target","title","className","tabIndex","htmlFor","fieldId","label","description","ref","setNotificationContainer","type","onClick","shape","colors","map","color","itemClassName","style","width","size","height","backgroundColor","wp","customize","Control","extend","initialize","id","params","this","bind","prototype","call","onRemoved","removedControl","destroy","container","remove","unbind","element","notifications","jQuery","render","renderContent","ReactDOM","setting","setNotificationCotainer","allowCollapse","addClass","ready","unmountComponentAtNode","controlConstructor","KirkiColorPaletteControl"],"sourceRoot":""}