{"mappings":"AAKAA,OAAQC,UAAWC,OAAK,WACvBC,GAAGC,MAAMC,UAAS,+BACa,SAW3B,SACOC,EAAQC,EAAOC,EAAQC,GAChC,IACCC,EADGC,EAAU,SAGZ,qBAA0BF,IAC3BH,GAAUE,EAAOI,QAAO,IACxBC,EAAEC,KAAMP,GAAK,SAAYQ,EAAKC,GACxBR,EAAOS,QAAUD,IAAQR,EAAOS,SAIhC,KADLP,EAAiBQ,OAAOC,iBAAiBC,KAAKC,aAAcb,EAAQO,MAEnET,GAAUU,EAAG,IAASN,EAAc,QAGtCJ,GAAM,KAGCO,EAAES,YAAaJ,OAAOK,UAAahB,EAAK,iBAG9CI,EAAaJ,EAAK,eAAgBiB,QAAO,MAAA,UACpCjB,EAAK,gBAAmBA,EAAK,eACjCI,GAAU,IAAUJ,EAAK,eACvB,WAAgBA,EAAK,gBACtBI,GAAU,MAEAJ,EAAMkB,UACf,YAAiBlB,EAAMkB,QACxBd,GAAU,OACF,WAAgBJ,EAAMkB,QAC9Bd,GAAU,QAEVA,GAAU,IAAUJ,EAAMkB,SAG5Bd,GAAU,sIACVO,OAAOK,QAAQG,KAAI,CAClBC,OAAM,CACLC,SAAQ,CAAIjB,QAKTL","sources":["src/customize-preview.js"],"sourcesContent":["/**\n * Hook in the kirkiPostMessageStylesOutput filter.\n *\n * Handles postMessage styles for typography controls.\n */\njQuery( document ).ready( function() {\n\twp.hooks.addFilter(\n\t\t'kirkiPostMessageStylesOutput',\n\t\t'kirki',\n\n\t\t/**\n\t\t * Append styles for this control.\n\t\t *\n\t\t * @param {string} styles      - The styles.\n\t\t * @param {Object} value       - The control value.\n\t\t * @param {Object} output      - The control's \"output\" argument.\n\t\t * @param {string} controlType - The control type.\n\t\t * @returns {string} - Returns the CSS as a string.\n\t\t */\n\t\tfunction( styles, value, output, controlType ) {\n\t\t\tvar googleFont = '',\n\t\t\t\tprocessedValue;\n\n\t\t\tif ( 'kirki-typography' === controlType ) {\n\t\t\t\tstyles += output.element + '{';\n\t\t\t\t_.each( value, function( val, key ) {\n\t\t\t\t\tif ( output.choice && key !== output.choice ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tprocessedValue = window.kirkiPostMessage.util.processValue( output, val );\n\t\t\t\t\tif ( false !== processedValue ) {\n\t\t\t\t\t\tstyles += key + ':' + processedValue + ';';\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tstyles += '}';\n\n\t\t\t\t// Check if this is a googlefont so that we may load it.\n\t\t\t\tif ( ! _.isUndefined( window.WebFont ) && value['font-family'] ) {\n\n\t\t\t\t\t// Calculate the googlefont params.\n\t\t\t\t\tgoogleFont = value['font-family'].replace( /\\\"/g, '&quot;' ); // eslint-disable-line no-useless-escape\n\t\t\t\t\tif ( value['font-weight'] && value['font-style'] ) {\n\t\t\t\t\t\tgoogleFont += ':' + value['font-weight'];\n\t\t\t\t\t\tif ( 'italic' === value['font-style'] ) {\n\t\t\t\t\t\t\tgoogleFont += 'i';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ( value.variant ) {\n\t\t\t\t\t\tif ( 'regular' === value.variant ) {\n\t\t\t\t\t\t\tgoogleFont += ':400';\n\t\t\t\t\t\t} else if ( 'italic' === value.variant ) {\n\t\t\t\t\t\t\tgoogleFont += ':400i';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgoogleFont += ':' + value.variant;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tgoogleFont += ':cyrillic,cyrillic-ext,devanagari,greek,greek-ext,khmer,latin,latin-ext,vietnamese,hebrew,arabic,bengali,gujarati,tamil,telugu,thai';\n\t\t\t\t\twindow.WebFont.load( {\n\t\t\t\t\t\tgoogle: {\n\t\t\t\t\t\t\tfamilies: [ googleFont ]\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn styles;\n\t\t}\n\t);\n} );\n"],"names":["jQuery","document","ready","wp","hooks","addFilter","styles","value","output","controlType","processedValue","googleFont","element","_","each","val","key","choice","window","kirkiPostMessage","util","processValue","isUndefined","WebFont","replace","variant","load","google","families"],"version":3,"file":"customize-preview.js.map"}